@page "/ecology"
@using OpenEcologyApp.Data
@inject HttpClient Http

<PageTitle>Данные об урожае</PageTitle>

<div class="container">
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h1 class="text-center mb-4">Данные об урожае зерновых</h1>
                    
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="yearFilter">Год</label>
                                <select class="form-select" id="yearFilter" @onchange="OnYearChanged">
                                    <option value="">Все годы</option>
                                    @foreach (var year in availableYears)
                                    {
                                        <option value="@year">@year</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="regionFilter">Область</label>
                                <select class="form-select" id="regionFilter" @onchange="OnRegionChanged">
                                    <option value="">Все области</option>
                                    @foreach (var region in availableRegions)
                                    {
                                        <option value="@region">@region</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="sortBy">Сортировка</label>
                                <select class="form-select" id="sortBy" @onchange="OnSortChanged">
                                    <option value="year">По году</option>
                                    <option value="yield">По урожайности</option>
                                    <option value="area">По площади</option>
                                    <option value="harvest">По сбору</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-primary">
                                <tr>
                                    <th>Год</th>
                                    <th>Область</th>
                                    <th>Урожайность (ц/га)</th>
                                    <th>Посевная площадь (тыс. га)</th>
                                    <th>Валовый сбор (тыс. тонн)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (filteredData != null)
                                {
                                    @foreach (var item in filteredData)
                                    {
                                        <tr>
                                            <td>@item.Year</td>
                                            <td>@item.Region</td>
                                            <td>@item.Yield.ToString("F1")</td>
                                            <td>@item.SownArea.ToString("F0")</td>
                                            <td>@item.GrossHarvest.ToString("F0")</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="row mt-4">
                        <div class="col-md-12">
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item @(_page <= 1 ? "disabled" : "")">
                                        <button class="page-link" @onclick="PreviousPage">Предыдущая</button>
                                    </li>
                                    <li class="page-item">
                                        <span class="page-link">Страница @_page</span>
                                    </li>
                                    <li class="page-item">
                                        <button class="page-link" @onclick="NextPage">Следующая</button>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h3 class="card-title">Статистика</h3>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="card bg-primary text-white">
                                <div class="card-body text-center">
                                    <h5>Средняя урожайность</h5>
                                    <h3>@averageYield.ToString("F1") ц/га</h3>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-success text-white">
                                <div class="card-body text-center">
                                    <h5>Общая площадь</h5>
                                    <h3>@totalArea.ToString("F0") тыс. га</h3>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-info text-white">
                                <div class="card-body text-center">
                                    <h5>Валовый сбор</h5>
                                    <h3>@totalHarvest.ToString("F0") тыс. т</h3>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-warning text-white">
                                <div class="card-body text-center">
                                    <h5>Количество записей</h5>
                                    <h3>@totalRecords</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<GrainHarvest>? data;
    private List<GrainHarvest>? filteredData;
    private int _page = 1;
    private const int _pageSize = 10;
    private string selectedYear = "";
    private string selectedRegion = "";
    private string sortBy = "year";
    private List<int> availableYears = new();
    private List<string> availableRegions = new();
    private double averageYield;
    private double totalArea;
    private double totalHarvest;
    private int totalRecords;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        data = await Http.GetFromJsonAsync<List<GrainHarvest>>($"api/ecology/{_page}/{_pageSize}") ?? new();
        UpdateFilters();
        ApplyFilters();
        CalculateStatistics();
    }

    private void UpdateFilters()
    {
        if (data != null)
        {
            availableYears = data.Select(d => d.Year).Distinct().OrderByDescending(y => y).ToList();
            availableRegions = data.Select(d => d.Region).Distinct().OrderBy(r => r).ToList();
        }
    }

    private void ApplyFilters()
    {
        if (data == null) return;

        filteredData = data;

        if (!string.IsNullOrEmpty(selectedYear))
        {
            filteredData = filteredData.Where(d => d.Year.ToString() == selectedYear).ToList();
        }

        if (!string.IsNullOrEmpty(selectedRegion))
        {
            filteredData = filteredData.Where(d => d.Region == selectedRegion).ToList();
        }

        filteredData = sortBy switch
        {
            "yield" => filteredData.OrderByDescending(d => d.Yield).ToList(),
            "area" => filteredData.OrderByDescending(d => d.SownArea).ToList(),
            "harvest" => filteredData.OrderByDescending(d => d.GrossHarvest).ToList(),
            _ => filteredData.OrderByDescending(d => d.Year).ToList()
        };
    }

    private void CalculateStatistics()
    {
        if (filteredData == null || !filteredData.Any()) return;

        averageYield = filteredData.Average(d => d.Yield);
        totalArea = filteredData.Sum(d => d.SownArea);
        totalHarvest = filteredData.Sum(d => d.GrossHarvest);
        totalRecords = filteredData.Count;
    }

    private void OnYearChanged(ChangeEventArgs e)
    {
        selectedYear = e.Value?.ToString() ?? "";
        ApplyFilters();
        CalculateStatistics();
    }

    private void OnRegionChanged(ChangeEventArgs e)
    {
        selectedRegion = e.Value?.ToString() ?? "";
        ApplyFilters();
        CalculateStatistics();
    }

    private void OnSortChanged(ChangeEventArgs e)
    {
        sortBy = e.Value?.ToString() ?? "year";
        ApplyFilters();
    }

    private async Task PreviousPage()
    {
        if (_page > 1)
        {
            _page--;
            await LoadData();
        }
    }

    private async Task NextPage()
    {
        _page++;
        await LoadData();
    }
}
