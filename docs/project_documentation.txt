Документация по проекту OpenEcologyApp
=====================================

1. Структура проекта
-------------------
1.1. Основные компоненты:
    - Pages/ - Razor страницы приложения
    - Data/ - Классы для работы с данными
    - wwwroot/ - Статические файлы (CSS, JS, изображения)
    - docs/ - Документация проекта

2. Работа с базой данных
-----------------------
2.1. Модель данных (Data/GrainHarvest.cs):
    - Класс GrainHarvest представляет запись о урожае зерновых
    - Свойства:
        * Year (int) - год
        * Region (string) - регион
        * Yield (double) - урожайность (ц/га)
        * SownArea (double) - посевная площадь (тыс. га)
        * GrossHarvest (double) - валовый сбор (тыс. тонн)

2.2. Инициализация БД (Data/DbInitializer.cs):
    - Метод Initialize() заполняет БД начальными данными
    - Данные добавляются через DbContext
    - Каждая запись содержит информацию о:
        * Годе
        * Регионе
        * Урожайности
        * Посевной площади
        * Валовом сборе

2.3. Контекст БД (Data/ApplicationDbContext.cs):
    - Наследуется от DbContext
    - Содержит DbSet<GrainHarvest> для работы с данными
    - Настройка подключения к БД через строку подключения

3. Страницы приложения
---------------------
3.1. Analytics.razor:
    - Главная страница аналитики
    - Компоненты:
        * Статистические карточки (средняя урожайность, общая площадь и т.д.)
        * График динамики урожайности
        * График распределения посевных площадей
        * Таблица топ-5 регионов
        * Сравнение периодов
    - Методы:
        * InitializeCharts() - инициализация графиков
        * UpdateCharts() - обновление графиков
        * CalculateStats() - расчет статистики
        * CalculateTopRegions() - расчет топ регионов
        * CalculateYieldTrend() - расчет динамики урожайности

3.2. EcologyList.razor:
    - Страница со списком данных
    - Функционал:
        * Таблица с данными
        * Фильтрация по году и региону
        * Сортировка по колонкам
        * Пагинация

3.3. GrainData.razor:
    - Страница с детальной информацией
    - Отображение:
        * Таблица данных
        * Статистика
        * Графики

4. Работа с данными
------------------
4.1. Получение данных:
    - Через API контроллеры
    - Методы:
        * GetAll() - получение всех данных
        * GetByYear() - фильтрация по году
        * GetByRegion() - фильтрация по региону

4.2. Обработка данных:
    - Группировка по годам и регионам
    - Расчет средних значений
    - Расчет сумм
    - Расчет динамики

4.3. Экспорт данных:
    - В формате CSV
    - В формате Excel
    - Возможность выбора периода и региона

5. Визуализация данных
---------------------
5.1. Графики (wwwroot/js/charts.js):
    - Использование Chart.js
    - Типы графиков:
        * Линейный (динамика урожайности)
        * Столбчатый (распределение площадей)
        * Круговой (доли регионов)

5.2. Стилизация (wwwroot/css/site.css):
    - Цветовая схема
    - Адаптивный дизайн
    - Анимации и переходы

6. Особенности реализации
------------------------
6.1. Фильтрация данных:
    - Реализована на стороне клиента
    - Поддерживает множественные фильтры
    - Автоматическое обновление при изменении фильтров

6.2. Расчет статистики:
    - Средние значения
    - Суммы
    - Процентные изменения
    - Тренды

6.3. Оптимизация:
    - Кэширование данных
    - Ленивая загрузка
    - Асинхронные операции

7. Безопасность
--------------
7.1. Валидация данных:
    - Проверка входных параметров
    - Защита от SQL-инъекций
    - Обработка ошибок

7.2. Доступ к данным:
    - Контроль доступа
    - Логирование операций
    - Резервное копирование

8. Расширение функционала
------------------------
8.1. Возможные улучшения:
    - Добавление новых типов графиков
    - Расширение аналитики
    - Интеграция с внешними API
    - Мобильная версия

8.2. Масштабирование:
    - Поддержка больших объемов данных
    - Оптимизация запросов
    - Кэширование результатов 